{"version":3,"sources":["Award.js","App.js","serviceWorker.js","index.js"],"names":["awards","Award","i","isNew","ref","useRef","useEffect","current","scrollIntoView","behavior","src","length","className","confettiConfig","angle","spread","startVelocity","elementCount","dragFriction","duration","stagger","width","height","perspective","colors","config","StarOrDot","numCorrect","App","min","max","operators","numToWin","onlyPositveAnswers","operatorSymbol","randomNumber","Math","floor","random","randomQuestion","x","operator","y","randomColor","color","console","log","last","indexOf","r","next","c","useState","setQuestion","f","Function","correctAnswer","answer","setAnswer","setNumCorrect","won","setWon","showNext","setShowNext","message","setMessage","setColor","maxAnswer","maxLength","confirmAnswer","val","nextCard","showGo","messageClass","onKeyDown","e","window","event","key","keyCode","which","substr","String","fromCharCode","test","onKey","onClick","tabIndex","active","Array","map","href","title","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.d1fdf1d0.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react'\n\nconst awards = [\n  '001-ufo.svg',\n  '004-ufo.svg',\n  '007-alien.svg',\n  '010-alien.svg',\n  '013-alien.svg',\n  '016-spaceship.svg',\n  '019-spaceship.svg',\n  '022-alien.svg',\n  '025-blaster.svg',\n  '028-alien.svg',\n  '002-spaceship.svg',\n  '005-alien.svg',\n  '008-ufo.svg',\n  '011-spaceship.svg',\n  '014-ufo.svg',\n  '017-alien.svg',\n  '020-ufo.svg',\n  '023-ufo.svg',\n  '026-spaceship.svg',\n  '029-abduction.svg',\n  '003-radar.svg',\n  '006-ufo.svg',\n  '009-spaceship.svg',\n  '012-alien.svg',\n  '015-wormhole.svg',\n  '018-scan.svg',\n  '021-alien.svg',\n  '024-top',\n  'secret.svg',\n  '027-alien.svg',\n  '030-spaceship.svg',\n]\n\nconst Award = ({i, isNew}) => {\n  const ref = useRef()\n  useEffect(() => {\n    if (isNew) ref.current.scrollIntoView({ behavior: 'smooth' })\n  }, [isNew])\n  return <img ref={ref} src={`./awards/${awards[i % awards.length]}`} className={`${isNew && 'new'} award ${i}`} />\n}\n\nexport default Award","import React, { useState } from 'react'\nimport './App.css'\nimport Confetti from 'react-dom-confetti'\nimport Award from './Award'\n\nconst confettiConfig = {\n  angle: 90,\n  spread: \"90\",\n  startVelocity: \"50\",\n  elementCount: \"75\",\n  dragFriction: 0.12,\n  duration: \"5000\",\n  stagger: 3,\n  width: \"10px\",\n  height: \"10px\",\n  perspective: \"500px\",\n  colors: [\"#cd3e44\", \"#b7651e\", \"#c4a71b\", \"#0f885b\", \"#0f8187\", \"#1176b8\", \"#5161a2\", \"#e3477c\"],\n}\n\nconst config = {\n  min: 0,\n  max: 12,\n  operators: ['+'], // ['+', '-', '/', '*'] supported\n  numToWin: 3,\n  onlyPositveAnswers: true,\n  colors: ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'purple', 'pink'], // matches card colors in index.css\n}\n\nfunction App() {\n  const {min, max, operators, numToWin, onlyPositveAnswers, colors} = config\n\n  const operatorSymbol = {'*': <span>&times;</span>, '/': <span>&#xF7;</span>, '+':'+', '-':'-'}\n\n  const randomNumber = () => Math.floor(Math.random() * (max-min)) + min\n  const randomOperator = () => operators[Math.floor(Math.random() * operators.length)]\n  const randomQuestion = () => {\n    let x = randomNumber()\n    let operator = randomOperator()\n    let y = randomNumber()\n    if (onlyPositveAnswers && operator == '-' && (y > x)) {[x,y] = [y,x]} // flip\n    if (operator == '/') {\n      if (x == 0 && y == 0) y = 1\n      if (y == 0) {[x,y] = [y,x]} // flip\n      [x,y] = [x*y,y] // flip numerator and answer\n    }\n    return [x,operator,y]\n  }\n  const randomColor = (color) => {\n    console.log('randomColor', color, colors)\n    const last = color ? colors.indexOf[color] : 0\n    const r = Math.floor(Math.random() * (colors.length-1))\n    const next = ((last||0) + r) % colors.length\n    const c = colors[next]\n    console.log('last', last, 'r', r, 'next', next, 'c', c)\n    return c\n  }\n\n  const [[x,operator,y], setQuestion] = useState(randomQuestion())\n  const f = new Function('x', 'y', `return x ${operator} y;`)\n  const correctAnswer = f(x, y)\n\n  const [answer, setAnswer] = useState('')\n  const [numCorrect, setNumCorrect] = useState(0)\n  const [won, setWon] = useState(0)\n  const [showNext, setShowNext] = useState(false)\n  const [message, setMessage] = useState('')\n  const [color, setColor] = useState(randomColor())\n\n  let maxAnswer = f(max,max)\n  if (operator == '-') maxAnswer = f(max,min) * (onlyPositveAnswers ? 1 : -1)\n  if (operator == '/') maxAnswer = max\n  const maxLength = ('' + maxAnswer).length\n\n  const confirmAnswer = (val) => {\n    if (val == correctAnswer) {\n      setNumCorrect(numCorrect+1)\n      setMessage(\"Yes, That's Right!\")\n      if (numCorrect+1 == numToWin) {\n        setWon(won + 1)\n      }\n    } else {\n      setNumCorrect(0)\n      setMessage(`Nope! It's ${correctAnswer}`)\n    }\n    setShowNext(true)\n  }\n\n  const nextCard = () => {\n    setQuestion(randomQuestion())\n    setAnswer('')\n    setMessage('')\n    setShowNext(false)\n    setColor(randomColor(color))\n    if (numCorrect == numToWin) {\n      setNumCorrect(0)\n    }\n  }\n\n  const onKey = (e) => {\n    e = e || window.event\n    console.log('onKey', e)\n    var key = e.keyCode || e.which\n\n    if (key == 13 && answer.length > 0) {\n      if (message.length > 0) nextCard()\n      else confirmAnswer(answer)\n      return\n    }\n    if ((key == 8 || key == 46) && answer.length > 0) {\n      setAnswer(answer.substr(0,answer.length-1))\n      return\n    }\n\n    key = String.fromCharCode(key)\n    if (!onlyPositveAnswers && (key == '-' || key == '+')) {\n      if (answer[0] == '-') setAnswer(answer.substr(1))\n      else if (key != '+') setAnswer(key + answer)\n      return\n    }\n    var regex = /[0-9]|\\./\n    if(regex.test(key) && answer.length < maxLength) {\n      setAnswer(answer + key)\n      return\n    }\n  }\n\n  const showGo = !showNext && answer.length > 0 && f(max, max) >= 10\n  const messageClass = answer == correctAnswer ? 'correct' : 'incorrect'\n\n  const onClick = () => {\n    if (showGo) confirmAnswer(answer)\n    if (showNext) nextCard()\n  }\n\n  return (\n    <div className=\"App\" onKeyDown={e=>onKey(e)} onClick={onClick} tabIndex=\"0\">\n      <header className=\"App-header\">\n        <div className={`${color} card`}>\n          <div className={`message ${messageClass}`}>{message}</div>\n          <div className=\"question\">\n            <div className=\"first line\"><span className=\"x\">{x}</span></div>\n            <div className=\"second line\"><span className=\"operator\">{operatorSymbol[operator]}</span> <span className=\"y\">{y}</span></div>\n          </div>\n          <div className=\"answer line\">{answer}</div>\n          {showGo && <div className=\"action confirmAnswer\">Go!</div>}\n          {showNext && <div className=\"action nextCard\">Next Card</div>}\n          {!showNext && !showGo && <div className=\"action none\">&nbsp;</div>}\n        </div>\n        <div className=\"score\">\n          <Confetti className=\"confetti\" active={numCorrect == numToWin} config={confettiConfig} />\n          {[...Array(numToWin)].map((e, i) => <StarOrDot key={i} i={i} numCorrect={numCorrect}/>)}\n        </div>\n\n        <div className=\"awards\">\n          {[...Array(won)].map((e, i) => <Award key={i} i={i} isNew={i == won-1}/>)}\n        </div>\n\n        <div className=\"attribution\">Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n      </header>\n    </div>\n  )\n}\n\nconst StarOrDot = ({i,numCorrect}) => {\n  if (i < numCorrect) return <span className=\"star\">&#9733;</span>\n  return <span className=\"dot\">&middot;</span>\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}